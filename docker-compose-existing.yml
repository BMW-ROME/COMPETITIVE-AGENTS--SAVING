services:
  # Use existing PostgreSQL and Redis containers
  postgres:
    image: postgres:15-alpine
    container_name: competitive-trading-postgres
    environment:
      POSTGRES_DB: competitive_trading_agents
      POSTGRES_USER: bigree
      POSTGRES_PASSWORD: RavenWood1!$
    ports:
      - "5433:5432"
    volumes:
      - competitive_postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - competitive-trading-network
    external: true  # Use existing container

  # Use existing Redis container
  redis:
    image: redis:7-alpine
    container_name: competitive-trading-redis
    ports:
      - "6380:6379"
    volumes:
      - competitive_redis_data:/data
    restart: unless-stopped
    networks:
      - competitive-trading-network
    external: true  # Use existing container

  # Main trading system
  trading-system:
    build: .
    container_name: competitive-trading-system
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://bigree:RavenWood1!$@postgres:5432/competitive_trading_agents
      - ALPACA_API_KEY=PKK43GTIACJNUPGZPCPF
      - ALPACA_SECRET_KEY=CuQWde4QtPHAtwuMfxaQhB8njmrcJDq0YK4Oz9Rw
      - TRADING_MODE=PAPER
      - LOG_LEVEL=INFO
      - NUM_AGENTS=11
      - DATA_UPDATE_INTERVAL=30
      - EVALUATION_INTERVAL=300
      - MCP_ENABLED=false
      - DYNAMIC_CONFIG_ENABLED=true
      - SAFE_MODE_SWITCHING=true
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    ports:
      - "8000:8000"
    restart: unless-stopped
    command: ["python", "run_trading_system.py"]
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    networks:
      - competitive-trading-network

volumes:
  competitive_postgres_data:
  competitive_redis_data:

networks:
  competitive-trading-network:
    external: true

